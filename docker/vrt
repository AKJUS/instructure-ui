#!/bin/bash

set -e

env_file=.env.test

dotenv () {
  set -a
  [ -f .env ] && . .env
  set +a
}

dotenv

function cleanup() {
  exit_code=$?
  set +e

  echo "Cleaning up..."
  docker-compose stop test
  docker-compose rm -f test
  docker rmi -f $(docker images -qf "dangling=true") &>/dev/null

  rm $env_file

  exit $exit_code
}

trap cleanup INT TERM EXIT

export COMPOSE_FILE=./docker-compose.test.yml

echo "Creating ${env_file} file..."
(
cat << EOF
CI=true
CHROMATIC_APP_CODE=${CHROMATIC_APP_CODE}
GERRIT_CHANGE_ID=${GERRIT_CHANGE_ID}
GERRIT_PROJECT=${GERRIT_PROJECT}
GERRIT_BRANCH=${GERRIT_BRANCH}
GERRIT_EVENT_TYPE=${GERRIT_EVENT_TYPE}
EOF
) > $env_file

echo "Pulling image..."
docker-compose pull

echo "Building services..."
docker-compose build

echo "Preparing container..."
container=$(docker-compose run -d --rm test tail -f /dev/null)

if [ "${GERRIT_EVENT_TYPE}" == "change-merged" ]; then
  echo "Accepting VRT images..."
  docker exec $container bash -c "yarn accept:vrt"
else
  echo "Running VRT tests..."
  docker exec $container bash -c "yarn test:vrt"
fi
