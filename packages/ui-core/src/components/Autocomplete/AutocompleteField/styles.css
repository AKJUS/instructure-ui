.inputContainer {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  min-width: 1px;
  background: var(--background);
  margin: 0;
  transition: all 0.2s ease-out;

  outline: 0.1875rem solid transparent;
  outline-offset: -0.5rem;

  overflow: hidden;

  font-family: var(--fontFamily);

  border: var(--borderWidth) var(--borderStyle) var(--borderColor);
  border-radius: var(--borderRadius);

  &.focus {
    border-color: var(--focusBorderColor);
    outline: 0.1875rem solid var(--focusOutlineColor);
    outline-offset: -0.1875rem;
    box-shadow: initial;
  }

  &.invalid {
    border-color: var(--errorBorderColor);

    &.focus {
      border-color: var(--errorBorderColor);
      outline-color: var(--errorOutlineColor);
    }
  }

  &.disabled {
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.5;
  }

  &.small {
    font-size: var(--smallFontSize);

    .input {
      min-height: calc(var(--smallHeight) - 0.125rem);
    }
  }

  &.medium {
    font-size: var(--mediumFontSize);

    .input {
      min-height: calc(var(--mediumHeight) - 0.125rem);
    }
  }

  &.large {
    font-size: var(--largeFontSize);

    .input {
      min-height: calc(var(--largeHeight) - 0.125rem);
    }
  }

  .inputLayout {
    position: relative;
    display: flex;
    flex: 1;
  }

  .icon {
    display: block;
    position: absolute;
    top: calc(50% - 0.4rem);
    right: var(--inputPaddingStart);
    pointer-events: none;
    fill: var(--iconColor);
  }

  .input {
    all: initial;
    width: 100%;
    &::-ms-clear {
      display: none;
    }

    &[autocomplete="off"]::-webkit-contacts-auto-fill-button {
      display: none !important; /* stylelint-disable-line declaration-no-important */
    }

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    appearance: none;

    line-height: 1; /* reset global line height */

    margin: 0;
    display: block;

    font-family: inherit;
    font-size: inherit;
    font-weight: var(--fontWeight);

    color: var(--color);
    padding: 0 var(--inputPaddingEnd) 0 var(--inputPaddingStart);
    box-sizing: border-box;

    &::placeholder {
      color: var(--placeholderColor);
    }
  }
}
