@define-mixin start-grid-col {
  flex: 1;
  margin-bottom: 0;

  &.rowSpacingSmall,
  &.rowSpacingMedium,
  &.rowSpacingLarge {
    margin-bottom: 0;
  }

  &.colSpacingSmall {
    padding-right: calc(map(GridCol, spacingSmall) / 2);
    padding-left: calc(map(GridCol, spacingSmall) / 2);
  }

  &.colSpacingMedium {
    padding-right: calc(map(GridCol, spacingMedium) / 2);
    padding-left: calc(map(GridCol, spacingMedium) / 2);
  }

  &.colSpacingLarge {
    padding-right: calc(map(GridCol, spacingLarge) / 2);
    padding-left: calc(map(GridCol, spacingLarge) / 2);
  }

  &.top {
    align-self: flex-start;
  }

  &.middle {
    align-self: center;
  }

  &.bottom {
    align-self: flex-end;
  }
}

@define-mixin grid-col
  $width: 1 {

  flex: 0 0 calc($width * 99.999%);
  max-width: calc($width * 99.999%);
}

@define-mixin grid-cols-for-breakpoint
  $breakpoint,
  $grid-size: 12 {

  /* stylelint-disable selector-class-pattern, selector-no-type */

  .$(breakpoint)--auto {
    flex: 0 1 auto;
  }

  .$(breakpoint)--1 {
    @mixin grid-col 1/$grid-size;
  }

  .$(breakpoint)--2 {
    @mixin grid-col 2/$grid-size;
  }

  .$(breakpoint)--3 {
    @mixin grid-col 3/$grid-size;
  }

  .$(breakpoint)--4 {
    @mixin grid-col 4/$grid-size;
  }

  .$(breakpoint)--5 {
    @mixin grid-col 5/$grid-size;
  }

  .$(breakpoint)--6 {
    @mixin grid-col 6/$grid-size;
  }

  .$(breakpoint)--7 {
    @mixin grid-col 7/$grid-size;
  }

  .$(breakpoint)--8 {
    @mixin grid-col 8/$grid-size;
  }

  .$(breakpoint)--9 {
    @mixin grid-col 9/$grid-size;
  }

  .$(breakpoint)--10 {
    @mixin grid-col 9/$grid-size;
  }

  .$(breakpoint)--11 {
    @mixin grid-col 9/$grid-size;
  }

  .$(breakpoint)--12 {
    flex: 0 0 100%;
  }

  /* stylelint-enable selector-class-pattern, selector-no-type */
}

.root {
  margin-bottom: 0;

  &.rowSpacingSmall {
    margin-bottom: map(GridCol, spacingSmall);
  }

  &.rowSpacingMedium {
    margin-bottom: map(GridCol, spacingMedium);
  }

  &.rowSpacingLarge {
    margin-bottom: map(GridCol, spacingLarge);
  }

  &:last-child {
    margin-bottom: 0;
  }

  @mixin grid-cols-for-breakpoint phone;
}

.startAtPhone {
  @mixin start-grid-col;
}

@media screen and (min-width: map(GridCol, breakpointTablet)) {

  .startAtTablet {
    @mixin start-grid-col;
  }

  @mixin grid-cols-for-breakpoint tablet;
}

@media screen and (min-width: map(GridCol, breakpointDesktop)) {

  .startAtDesktop {
    @mixin start-grid-col;
  }

  @mixin grid-cols-for-breakpoint desktop;
}

@media screen and (min-width: map(GridCol, breakpointWide)) {

  .startAtWide {
    @mixin start-grid-col;
  }

  @mixin grid-cols-for-breakpoint wide;
}
