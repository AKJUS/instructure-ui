:root {
  --Checkbox-iconSizeSm: 0.9rem;
  --Checkbox-iconSizeSmHalf: calc(var(--Checkbox-iconSizeSm) / 2);
  --Checkbox-iconSizeMed: 1.1rem;
  --Checkbox-iconSizeMedHalf: calc(var(--Checkbox-iconSizeMed) / 2);
  --Checkbox-iconSizeLg: 1.3rem;
  --Checkbox-iconSizeLgHalf: calc(var(--Checkbox-iconSizeLg) / 2);
}

.root {
  user-select: none;

  .label {
    position: relative;
  }

  .input {
    margin: 0;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    opacity: 0.0001; /* selenium cannot find fully transparent elements */
  }

  .facadeLayout {
    position: relative;
    height: 100%;
  }

}

.simple {

  + .simple {
    margin-top: 0.6rem;
  }

  .label {
    display: block;
  }

  .layout {
    position: relative;
    padding-left: 1.5rem;
  }

  .facade {
    box-sizing: border-box;
    width: 1em;
    height: 1em;
    position: absolute;
    top: 0.0625rem;
    left: 0;
    transition: all 0.2s;
    border: 1px solid;
  }

  .onIcon {
    width: 0.75rem;
    height: 0.75rem;
    display: block;
    position: absolute;
    top: 0.085rem;
    left: 0.0625rem;
    fill: currentColor;
  }

  .enter {
    transform: scale(2) translate3d(0, 0, 0);
    opacity: 0;
  }

  .enter.enter-active {
    transition: all 0.2s cubic-bezier(0.175, 0.885, 0.320, 1.275);
    transform: scale(1) translate3d(0, 0, 0);
    opacity: 1;
  }

  .input[aria-disabled] ~ .layout .text {
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.5;
  }

}

.toggle {

  .label {
    display: inline-block;
  }

  .layout {
    transition: all 0.2s;
    position: relative;
    box-sizing: border-box;
    border: 4px solid;
    display: inline-block;
    vertical-align: middle;

    &::before {
      transition: all 0.2s ease-out;
      transform: translate3d(0, 0, 0);
      content: "";
      height: 100%;
      width: 50%;
      position: absolute;
      top: 0;
      left: 0;
      box-shadow: 0 3px 8px rgba(0, 0, 0, 0.4);
    }
  }

  &.small {

    .onIcon,
    .offIcon {
      width: var(--Checkbox-iconSizeSm);
      height: var(--Checkbox-iconSizeSm);
      margin-top: -var(--Checkbox-iconSizeSmHalf);
    }

    .onIcon {
      margin-left: -var(--Checkbox-iconSizeSmHalf);
    }

    .offIcon {
      margin-right: -var(--Checkbox-iconSizeSmHalf);
    }

    .layout {
      height: 1.75rem;
      width: 3rem;
    }

  }

  &.medium {

    .layout {
      height: 2.375rem;
      width: 4rem;
    }

    .onIcon,
    .offIcon {
      width: var(--Checkbox-iconSizeMed);
      height: var(--Checkbox-iconSizeMed);
      margin-top: -var(--Checkbox-iconSizeMedHalf);
    }

    .onIcon {
      margin-left: -var(--Checkbox-iconSizeMedHalf);
    }

    .offIcon {
      margin-right: -var(--Checkbox-iconSizeMedHalf);
    }

  }

  &.large {

    .layout {
      height: 3rem;
      width: 5rem;
    }

    .onIcon,
    .offIcon {
      width: var(--Checkbox-iconSizeLg);
      height: var(--Checkbox-iconSizeLg);
      margin-top: -var(--Checkbox-iconSizeLgHalf);
    }

    .onIcon {
      margin-left: -var(--Checkbox-iconSizeLgHalf);
    }

    .offIcon {
      margin-right: -var(--Checkbox-iconSizeLgHalf);
    }

  }

  .facade {
    width: 50%;
    height: 100%;
    position: absolute;
    top: 0;
    right: 0;
  }

  .text {
    margin-bottom: 0.4rem;
  }

  .onIcon,
  .offIcon {
    display: block;
    position: absolute;
    top: 50%;
    z-index: 1;
    fill: currentColor;
  }

  .onIcon {
    left: calc(50% - 0.125rem); /* account for half-border width so icon looks centered */
  }

  .offIcon {
    right: calc(50% - 0.125rem); /* account for half-border width so icon looks centered */
  }

  .enter {
    transform: scale(0.01) translate3d(0, 0, 0);
    opacity: 0;
  }

  .enter.enter-active {
    transition: all 0.2s ease-out;
    transform: scale(1) translate3d(0, 0, 0);
    opacity: 1;
  }

  .input {

    &:checked ~ .layout {

      &::before {
        transform: translate3d(100%, 0, 0);
      }

      .facade {
        right: auto;
        left: 0;
      }

    }

    &[aria-disabled] {

      ~ .layout {
        cursor: not-allowed;
        pointer-events: none;
        opacity: 0.5;
      }

    }

  }

}
