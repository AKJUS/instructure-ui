.root {
  display: flex;
  align-items: flex-start;
}

.facade {
  color: var(--color);
  background: var(--background);
  position: relative;

  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;

  flex-shrink: 0;

  transition: all 0.2s;

  border: var(--borderWidth) solid var(--borderColor);
  border-radius: var(--borderRadius);

  margin-inline-end: var(--marginRight);
  margin-inline-start: 0;
  padding: var(--padding);

  &::before {
    content: "";
    position: absolute;
    top: -0.375rem;
    left: -0.375rem;
    width: calc(100% + 0.75rem);
    height: calc(100% + 0.75rem);
    box-sizing: border-box;
    border-radius: calc(var(--borderRadius) + 0.1875rem);
    border: var(--focusBorderWidth) var(--focusBorderStyle) var(--focusBorderColor);
    transition: all 0.2s;
    transform: scale(0.75) translate3d(0, 0, 0);
    opacity: 0;
  }
}

.label {
  flex: 1 1 auto;
  color: var(--labelColor);
  font-family: var(--labelFontFamily);
  font-weight: var(--labelFontWeight);
  line-height: var(--labelLineHeight);
  font-size: var(--labelFontSize);
}

.icon {
  display: flex;
  align-items: center;
  justify-content: center;

  > svg { /* stylelint-disable-line selector-max-type */
    display: block;
  }
}

.small {
  font-size: var(--iconSizeSmall);

  .facade {
    width: var(--facadeSizeSmall);
    height: var(--facadeSizeSmall);
  }
}

.medium {
  font-size: var(--iconSizeMedium);

  .facade {
    width: var(--facadeSizeMedium);
    height: var(--facadeSizeMedium);
  }

  .label {
    margin-top: var(--labelTopMarginMedium);
  }
}

.large {
  font-size: var(--iconSizeLarge);

  .facade {
    width: var(--facadeSizeLarge);
    height: var(--facadeSizeLarge);
  }

  .label {
    margin-top: var(--labelTopMarginLarge);
  }
}

.root {
  &.checked {
    .facade {
      background: var(--checkedBackground);
      border-color: var(--checkedBorderColor);
    }

    .label {
      color: var(--checkedLabelColor);
    }
  }

  &.focused {
    .facade {
      &::before {
        transform: scale(1) translate3d(0, 0, 0);
        opacity: 1;
      }
    }
  }

  &.hovered {
    .facade {
      border-color: var(--hoverBorderColor);
    }
  }
}
