@define-mixin button-base-variant
  $background: map(Button, defaultBackground),
  $text-color: map(Button, defaultTextColor),
  $background-hover: map(Button, defaultBackgroundHover),
  $border-color: map(Button, defaultBorderColor),
  $inner-border-color: map(Button, defaultInnerBorderColor) {

  background: $background;
  color: $text-color;
  border-color: $border-color;

  &:focus,
  &:hover,
  &:active {
    background: $background-hover;
  }

  &:active {
    box-shadow: inset 0 1px 0 $inner-border-color;
  }
}

@define-mixin button-focus-variant
  $focus-outline-color: map(Button, defaultFocusOutlineColor),
  $focus-outline-width: map(Button, defaultFocusOutlineWidth) {

  &:focus {
    box-shadow: inset 0 0 0 1px $focus-outline-color;
  }
}

.root {
  font-family: map(Button, fontFamily);
  text-transform: map(Button, textTransform);
  border-radius: map(Button, borderRadius);
  border-style: map(Button, borderStyle);
  border-width: map(Button, borderWidth);
}

.default {
  @mixin button-base-variant;

  @mixin button-focus-variant;
}

.primary {
  @mixin button-base-variant
    map(Button, primaryBackground),
    map(Button, primaryTextColor),
    map(Button, primaryBackgroundHover),
    map(Button, primaryBorderColor),
    map(Button, primaryInnerBorderColor);

  @mixin button-focus-variant
    map(Button, primaryFocusOutlineColor);
}

.success {
  @mixin button-base-variant
    map(Button, successBackground),
    map(Button, successTextColor),
    map(Button, successBackgroundHover),
    map(Button, successBorderColor),
    map(Button, successInnerBorderColor);

  @mixin button-focus-variant
    map(Button, successFocusOutlineColor);
}

.alert {
  @mixin button-base-variant
    map(Button, alertBackground),
    map(Button, alertTextColor),
    map(Button, alertBackgroundHover),
    map(Button, alertBorderColor),
    map(Button, alertInnerBorderColor);

  @mixin button-focus-variant
    map(Button, alertFocusOutlineColor);
}

.danger {
  @mixin button-base-variant
    map(Button, dangerBackground),
    map(Button, dangerTextColor),
    map(Button, dangerBackgroundHover),
    map(Button, dangerBorderColor),
    map(Button, dangerInnerBorderColor);

  @mixin button-focus-variant
    map(Button, dangerFocusOutlineColor);
}

.link {
  background: transparent;
  color: map(Button, linkTextColor);
  border-color: map(Button, linkBorderColor);
  text-decoration: map(Button, linkTextDecoration);

  @mixin button-focus-variant
    map(Button, linkFocusOutlineColor);

  &:hover {
    text-decoration: map(Button, linkTextDecorationHover);
  }

  &:focus,
  &:active {
    text-decoration: map(Button, linkTextDecorationFocus);
  }
}
