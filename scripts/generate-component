#!/bin/bash

set -e

PACKAGE_DIR=packages
PACKAGE_TEMPLATE_DIR=scripts/templates/component
COMPONENT_TEMPLATE_DIR=$PACKAGE_TEMPLATE_DIR/src/components/Component

current_version=$(node -p "require('./lerna').version")

read -p 'Component name (in PascalCase, e.g. NumberInput): ' component
read -p 'Package name or <enter> to generate the package name: ' package

if [ ! $component ]; then
  echo Invalid component name!
  exit 1
fi

if [ ! $package ]; then
  package=`echo ${component} | sed 's/\([a-z0-9]\)\([A-Z]\)/\1\-\2/g' | sed 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
  package="ui-${package}"
fi

export COMPONENT=$component
export VERSION=$current_version
export PACKAGE=$package

if [ ! -d "$PACKAGE_DIR" ]; then
  echo Cannot find component directory!
  exit 1
fi

if [ ! -d "$COMPONENT_TEMPLATE_DIR" ]; then
  echo Cannot find component template!
  exit 1
fi

COMPONENT_DIR=$PACKAGE_DIR/$PACKAGE/src/components

if [ -d "$PACKAGE_DIR/$PACKAGE" ]; then
  read -p "Package $PACKAGE exists! Continue? [Y/n]" CONT
  if [[ ! $CONT =~ ^[Yy]$ ]]; then
    exit 1
  else
    echo Generating $COMPONENT files in $COMPONENT_DIR

    cp -r $COMPONENT_TEMPLATE_DIR $COMPONENT_DIR/$COMPONENT
  fi
else
  echo Generating $PACKAGE files in $PACKAGE_DIR/$PACKAGE

  cp -r $PACKAGE_TEMPLATE_DIR $PACKAGE_DIR/$PACKAGE

  # Update file names
  find $PACKAGE_DIR/$PACKAGE -name 'Package*' -type f -exec bash -c 'mv "$1" "${1/Package/$PACKAGE}"' -- {} \;

  # Update file contents
  if [[ "$OSTYPE" == darwin* ]]; then
    find $PACKAGE_DIR/$PACKAGE -type f -exec sed -i '' "s/\${PACKAGE}/$PACKAGE/g" '{}' \;
    find $PACKAGE_DIR/$PACKAGE -type f -exec sed -i '' "s/\${VERSION}/$VERSION/g" '{}' \;
  else
    find $PACKAGE_DIR/$PACKAGE -type f -exec sed -i -e "s/\${PACKAGE}/$PACKAGE/g" '{}' \;
    find $PACKAGE_DIR/$PACKAGE -type f -exec sed -i -e "s/\${VERSION}/$VERSION/g" '{}' \;
  fi
fi

# Update directory names
find $COMPONENT_DIR -depth -name 'Component*' -type d -execdir bash -c 'mv "$1" "${1//Component/$COMPONENT}"' -- {} \;

# Update file names
find $COMPONENT_DIR/$COMPONENT -name 'Component*' -type f -exec bash -c 'mv "$1" "${1/Component/$COMPONENT}"' -- {} \;

# Update file contents
if [[ "$OSTYPE" == darwin* ]]; then
  find $COMPONENT_DIR/$COMPONENT -type f -exec sed -i '' "s/\${COMPONENT}/$COMPONENT/g" '{}' \;
else
  find $COMPONENT_DIR/$COMPONENT -type f -exec sed -i -e "s/\${COMPONENT}/$COMPONENT/g" '{}' \;
fi
